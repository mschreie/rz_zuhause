---
- name: get existing partition-tables
  shell:  "hammer --csv partition-table list | awk -F, '{ print $2 }'"
  register: current_partition_tables

- name: generate unique suffix
  shell: 'uuidgen -t | cut -c 1-6'
  delegate_to: localhost
  with_items:
     - "{{ custom_partition_tables }}"
  register: the_partition_tables


- name: dump original partition-table
  shell: "hammer partition-table dump --name '{{ item.item.original_name }}' > {{ tmp_dir }}/partition-table_{{ item.stdout }}.tmp"
  with_items:
     - "{{ the_partition_tables.results }}"

- name: save original partition-table
  shell: "hammer partition-table create --name '{{ item.item.new_name }}' --file {{ tmp_dir }}/partition-table_{{ item.stdout }}.tmp --audit-comment 'original'"
  when: "item.item.new_name not in current_partition_tables.stdout_lines"
  with_items:
     - "{{ the_partition_tables.results }}"

- name: copy template to server
  template:
    dest: "{{ tmp_dir }}/partition-table_{{ item.stdout }}.tmp" 
    src: partition_table.j2
  with_items:
     - "{{ the_partition_tables.results }}"

- name: debug the_partition_tables
  debug: 
    var: item
  with_items:
     - "{{ the_partition_tables.results }}"

- name: change existing  partition-table
  shell: "hammer partition-table update --name '{{ item.item.original_name }}' --file {{ tmp_dir }}/partition-table_{{ item.stdout }}.tmp --audit-comment '{{ item.item.comment | join(\n) }}'"
##  when: "item.item.new_name not in current_partition_tables.stdout_lines"
  with_items:
     - "{{ the_partition_tables.results }}"

- name: remove temporary file
  file:
    dest: "{{ tmp_dir }}/partition-table_{{ item.stdout }}.tmp"
    state: absent
  with_items:
     - "{{ the_partition_tables.results }}"



