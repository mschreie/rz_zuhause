- name: get current activation keys
  shell: hammer activation-key list --organization "{{ organization }}" | awk '{ print $3 }'
  register: current_activation_keys
  changed_when: false

- name: get current lifecycle environments
  shell: hammer lifecycle-environment list --organization "{{ organization }}" --library false | awk '{ print $3 }' | tail -n+4
  register: current_lifecycle_environments
  changed_when: false

# - name: get subscription id
#   shell: hammer subscription list --organization "{{ organization }}" | grep "Employee SKU" | awk '{print $16}'
#   register: sub_id
#   changed_when: false

## FIXME: Namen moegl. Weise FALSCH
- name: get subscription ids
  shell: hammer --output json subscription list --organization "{{ organization }}"
  register: subscriptions
  changed_when: false
#- debug: msg={{ (subscriptions.stdout | from_json | selectattr("Name","match","^(Employee SKU|Red Hat Enterprise Linux OpenStack Platform.*)$") | map(attribute="ID") | list)[0] }}

- name: create activation keys for content_view
  command: hammer activation-key create --organization "{{ organization }}" --content-view "{{ item.1.content_view }}" --lifecycle-environment "{{ item.0 }}" --name "AK-{{ item.1.content_view }}-{{ item.0 }}"
  with_nested:
    - "{{ current_lifecycle_environments.stdout_lines }}"
    - "{{ content_config }}"
  when: "'AK-{{ item.1.content_view }}-{{ item.0 }}' not in current_activation_keys.stdout"
- name: associate activation keys to host collection
  command: hammer activation-key add-host-collection --organization "{{ organization }}" --name "AK-{{ item.1.content_view }}-{{ item.0 }}" --host-collection "{{ item.1.host_collection }}"
  with_nested:
    - "{{ current_lifecycle_environments.stdout_lines }}"
    - "{{ content_config }}"
  when: "'AK-{{ item.1.content_view }}-{{ item.0 }}' not in current_activation_keys.stdout"

- name: find existing subscriptions for activation keys
  shell: hammer activation-key subscriptions --name "AK-{{ item.1.content_view }}-{{ item.0 }}"  --organization "{{ organization }}" | awk 'NR>3'
  with_nested:
    - "{{ current_lifecycle_environments.stdout_lines }}"
    - "{{ content_config }}"
  register: assigned_subs
  changed_when: false

- name: debug subscriptions
  debug: 
    var: subscriptions

- name: debug assigned_subs
  debug: 
    var: assigned_subs

- name: debug A
  # Liefert Liste mit den IDs der verfügbaren Subscriptions (2 bis 3-Stellige IDs)
  debug:
    msg: 'jinja2: {{ subscriptions.stdout | from_json | selectattr("Name","match", item.item.1.activation_key_subscription_regex) | map(attribute="ID") | join(" ") }}'
  when: '(item.stdout_lines | length) < (subscriptions.stdout | from_json | selectattr("Name","match", item.item.1.activation_key_subscription_regex) | list | length)'
  with_items: "{{ assigned_subs.results }}"

- name: debug B
  debug:
    msg: "when left {{(item.stdout_lines | length) }}"
  with_items: "{{ assigned_subs.results }}"

- name: debug C
  debug:
    msg: 'when right {{ (subscriptions.stdout | from_json | selectattr("Name","match", item.item.1.activation_key_subscription_regex) | list | length) }}'
  with_items: "{{ assigned_subs.results }}"


# FIXME: activation key also needs gluster and rhev subscriptions!
- name: associate subscription to all activation keys
  # XXXXXXXXXXXXXXX
  shell: for sub in {{ subscriptions.stdout | from_json | selectattr("Name","match", item.item.1.activation_key_subscription_regex) | map(attribute="ID") | join(" ") }}; do hammer activation-key add-subscription --organization "{{ organization }}" --name "AK-{{ item.item.1.content_view }}-{{ item.item.0 }}" --subscription-id $sub; done
  when: '(item.stdout_lines | length) < (subscriptions.stdout | from_json | selectattr("Name","match", item.item.1.activation_key_subscription_regex) | list | length)'
  with_items: "{{ assigned_subs.results }}"

# #####
# ### subscriptions -> Enthält alle Verfügbaren Subs
# ### 
# ### 
# ### assigned_subs -> 
# ###  enthält unter item.item => unsere content_config
# ###  enthält unter stdout => alles was SCHON assigned ist => NIX
# ### 
# ###          "_raw_params": "for sub in 73 23 2 152 153 154 155 156 157 158 159; do hammer activation-key add-subscription --organization \"Example Inc\" --name \"AK-all_and_newest-PROD\" --subscription-id $sub; done", 



- name: override what content that is enabled
  command: hammer activation-key content-override --organization "{{ organization }}" --name "AK-{{ item.1.content_view }}-{{ item.0 }}" --content-label "{{ item.1.override }}" --value 1
  with_nested:
    - "{{ current_lifecycle_environments.stdout_lines }}"
    - "{{ content_config }}"
  when: "'AK-{{ item.1.content_view }}-{{ item.0 }}' not in current_activation_keys.stdout"

- fail:
